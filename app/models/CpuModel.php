<?php

namespace Forge\Models;

/**
 * CpuModel
 *
 * @package Forge\Models
 * @autogenerated by Phalcon Developer Tools
 * @date 2019-10-20, 21:08:36
 */
class CpuModel extends \Phalcon\Mvc\Model
{
    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(column="id", type="integer", length=5, nullable=false)
     */
    protected $id;

    /**
     *
     * @var integer
     * @Column(column="manufacturer", type="integer", length=3, nullable=false)
     */
    protected $manufacturer;

    /**
     *
     * @var integer
     * @Column(column="generation", type="integer", length=3, nullable=false)
     */
    protected $generation;

    /**
     *
     * @var integer
     * @Column(column="codename", type="integer", length=3, nullable=false)
     */
    protected $codename;

    /**
     *
     * @var integer
     * @Column(column="socket", type="integer", length=3, nullable=true)
     */
    protected $socket;

    /**
     *
     * @var string
     * @Column(column="released_date", type="string", nullable=true)
     */
    protected $released_date;

    /**
     * Method to set the value of field manufacturer
     *
     * @param integer $manufacturer
     * @return $this
     */
    public function setManufacturer($manufacturer)
    {
        $this->manufacturer = $manufacturer;

        return $this;
    }

    /**
     * Method to set the value of field generation
     *
     * @param integer $generation
     * @return $this
     */
    public function setGeneration($generation)
    {
        $this->generation = $generation;

        return $this;
    }

    /**
     * Method to set the value of field codename
     *
     * @param integer $codename
     * @return $this
     */
    public function setCodename($codename)
    {
        $this->codename = $codename;

        return $this;
    }

    /**
     * Method to set the value of field socket
     *
     * @param integer $socket
     * @return $this
     */
    public function setSocket($socket)
    {
        $this->socket = $socket;

        return $this;
    }

    /**
     * Method to set the value of field released_date
     *
     * @param string $released_date
     * @return $this
     */
    public function setReleasedDate($released_date)
    {
        $this->released_date = $released_date;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the value of field manufacturer
     *
     * @return integer
     */
    public function getManufacturer()
    {
        return $this->manufacturer;
    }

    /**
     * Returns the value of field generation
     *
     * @return integer
     */
    public function getGeneration()
    {
        return $this->generation;
    }

    /**
     * Returns the value of field codename
     *
     * @return integer
     */
    public function getCodename()
    {
        return $this->codename;
    }

    /**
     * Returns the value of field socket
     *
     * @return integer
     */
    public function getSocket()
    {
        return $this->socket;
    }

    /**
     * Returns the value of field released_date
     *
     * @return string
     */
    public function getReleasedDate()
    {
        return $this->released_date;
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->setSource("cpu_model");
        $this->hasMany('id', 'Forge\Models\Cpu', 'model', ['alias' => 'Cpu']);
        $this->belongsTo('codename', 'Forge\Models\CpuCodename', 'id', ['alias' => 'CpuCodename']);
        $this->belongsTo('generation', 'Forge\Models\CpuGeneration', 'id', ['alias' => 'CpuGeneration']);
        $this->belongsTo('manufacturer', 'Forge\Models\CpuManufacturer', 'id', ['alias' => 'CpuManufacturer']);
        $this->belongsTo('socket', 'Forge\Models\CpuSocket', 'id', ['alias' => 'CpuSocket']);
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'cpu_model';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return CpuModel[]|CpuModel|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return CpuModel|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return [
            'id' => 'id',
            'manufacturer' => 'manufacturer',
            'generation' => 'generation',
            'codename' => 'codename',
            'socket' => 'socket',
            'released_date' => 'released_date'
        ];
    }
}
